{"version":3,"file":"static/js/883.6ec06f30.chunk.js","mappings":"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","sources":["pages/AnalyticsPage/Vault/index.jsx","pages/AnalyticsPage/index.jsx"],"sourcesContent":["import exitImg from 'assets/images/exit.png';\r\nimport vaultImage from 'assets/images/vault_team_noletter.jpg';\r\nimport Timer from 'components/Timer';\r\nimport config from 'config';\r\nimport { useDisconnectWallet } from 'hooks';\r\nimport useFetch from 'hooks/useFetch';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport { assetService } from 'services/blockchain/assetService';\r\nimport { store } from 'store';\r\nimport { useAppSelector } from 'store';\r\nimport {\r\n  setCoins,\r\n  setTokenIds,\r\n  setUsedTokenIdsOf,\r\n} from 'store/actions/globalActions';\r\nimport { getFloorPrice } from 'utils/alchemy';\r\n\r\nimport { Box, Button, Link, Typography } from '@mui/material';\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nconst PRICE_URL = 'https://api.coingecko.com/api/v3/coins/';\r\nconst TYPE_PERIOD = '/market_chart?vs_currency=usd&days=30/interval=1m';\r\n\r\nfunction Vault({ sx }) {\r\n  const [prices, setPrices] = useState();\r\n  const [floor, setFloor] = useState();\r\n  const [tvcl, setTVCL] = useState();\r\n  const [amountList, setAmountList] = useState();\r\n  const [ethPrice, setEthPrice] = useState(0);\r\n\r\n  const coinlist = [\r\n    'chainlink',\r\n    'shiba-inu',\r\n    'dogelon-mars',\r\n    'pax-gold',\r\n    'quant-network',\r\n    'hex',\r\n    'usd-coin',\r\n    'old-bitcoin',\r\n    'laika',\r\n    'ethereum',\r\n  ];\r\n\r\n  const getPriceData = async (coin) => {\r\n    const res = await fetch(`${PRICE_URL}${coin}${TYPE_PERIOD}`, {\r\n      mode: 'cors',\r\n      // credentials: 'include',\r\n    });\r\n    const { prices } = await res.json();\r\n    return prices;\r\n  };\r\n\r\n  const coinPromises = coinlist.map((coin) => getPriceData(coin));\r\n\r\n  const { active, account } = useWeb3React();\r\n  const { tokenIds, claimable, coins, usedTokenIdsOf } = useAppSelector(\r\n    (state) => state.global\r\n  );\r\n  const disconnectWallet = useDisconnectWallet();\r\n  const { data, loading, error } = useFetch(`${config.apiBaseURL}coins`);\r\n  const time = useFetch(`${config.apiBaseURL}time`);\r\n\r\n  // useEffect(() => {\r\n  //   setCoins();\r\n  // }, []);\r\n\r\n  // const getTokenBalance = async (address) => {\r\n  //   const balance = parseInt(await assetService.getAssetBalance(address));\r\n  //   console.log('bal', balance, address);\r\n  //   return balance;\r\n  // };\r\n\r\n  const getAll = async () => {\r\n    const res = await Promise.all(coinPromises);\r\n    const lengths = res.map((item) => item.length);\r\n    const minLength = Math.min(...lengths);\r\n    const newRes = res.map((item) => item.map((val) => val[1]));\r\n\r\n    let data = [];\r\n    for (let i = 0; i < minLength; i++) {\r\n      data.push({\r\n        chainlink: newRes[0][i],\r\n        'shiba-inu': newRes[1][i],\r\n        'dogelon-mars': newRes[2][i],\r\n        'pax-gold': newRes[3][i],\r\n        'quant-network': newRes[4][i],\r\n        hex: newRes[5][i],\r\n        'usd-coin': newRes[6][i],\r\n        'old-bitcoin': newRes[7][i],\r\n        laika: newRes[8][i],\r\n        ethereum: newRes[9][i],\r\n      });\r\n    }\r\n    // get latest price and calculate the proportion for each asset\r\n    const latest = minLength - 1;\r\n    let totalAmount =\r\n      data[latest]['chainlink'] * 408 +\r\n      data[latest]['shiba-inu'] * 100902622 +\r\n      data[latest]['dogelon-mars'] * 3445238310 +\r\n      data[latest]['pax-gold'] * 0.55 +\r\n      data[latest]['quant-network'] * 21.5 +\r\n      data[latest]['hex'] * 28404 +\r\n      data[latest]['laika'] * 17412306698 +\r\n      data[latest]['old-bitcoin'] * 27288 +\r\n      data[latest]['usd-coin'] * 1000;\r\n    setTVCL(totalAmount);\r\n    let assetAmountList = {\r\n      chainlink: data[latest]['chainlink'] * 408,\r\n      'shiba-inu': data[latest]['shiba-inu'] * 100902622,\r\n      'dogelon-mars': data[latest]['dogelon-mars'] * 3445238310,\r\n      'pax-gold': data[latest]['pax-gold'] * 0.55,\r\n      'quant-network': data[latest]['quant-network'] * 21.5,\r\n      hex: data[latest]['hex'] * 28404,\r\n      laika: data[latest]['laika'] * 17412306698,\r\n      'old-bitcoin': data[latest]['old-bitcoin'] * 27288,\r\n      'usd-coin': data[latest]['usd-coin'] * 1000,\r\n    };\r\n    setAmountList(assetAmountList);\r\n    setEthPrice(data[latest]['ethereum']);\r\n    const newUSD = data.map((item, index) => {\r\n      // console.log(\r\n      //   index,\r\n      //   moment()\r\n      //     .subtract(minLength - index, 'days')\r\n      //     .format('DD MMM')\r\n      // );\r\n      return {\r\n        name:\r\n          moment()\r\n            .subtract(minLength - index, 'days')\r\n            .date() == 1\r\n            ? moment()\r\n                .subtract(minLength - index, 'days')\r\n                .format('D MMM')\r\n            : moment()\r\n                .subtract(minLength - index, 'days')\r\n                .format('D'),\r\n        Vault:\r\n          item['chainlink'] * 408 +\r\n          item['shiba-inu'] * 100902622 +\r\n          item['dogelon-mars'] * 3445238310 +\r\n          item['pax-gold'] * 0.55 +\r\n          item['quant-network'] * 21.5 +\r\n          item['hex'] * 28404 +\r\n          item['laika'] * 17412306698 +\r\n          item['old-bitcoin'] * 27288 +\r\n          item['usd-coin'] * 1000,\r\n        Floor: item['ethereum'] * floor,\r\n      };\r\n    });\r\n    console.log('data', data, newUSD);\r\n    setPrices(newUSD.slice(-20));\r\n  };\r\n\r\n  const getFloor = async () => {\r\n    const price = await getFloorPrice();\r\n    setFloor(price);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      store.dispatch(setTokenIds(account));\r\n      store.dispatch(setUsedTokenIdsOf(account));\r\n      // config.tokens.map((token) => {\r\n      //   getTokenBalance(token);\r\n      // });\r\n    }\r\n  }, [active, account]);\r\n\r\n  useEffect(() => {\r\n    // getPriceData('chainlink');\r\n    getFloor();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAll();\r\n  }, [floor]);\r\n  const onClaim = async () => {\r\n    const remain = tokenIds.filter((id) => !usedTokenIdsOf.includes(id));\r\n    let tx;\r\n    if (remain.length >= 100) {\r\n      tx = await assetService.claimAsset(account, remain.slice(0, 100));\r\n    } else {\r\n      tx = await assetService.claimAsset(account, remain);\r\n    }\r\n    if (tx !== null) {\r\n      toast.success('Successfully claimed!');\r\n      store.dispatch(setUsedTokenIdsOf(account));\r\n      store.dispatch(setTokenIds(account));\r\n    }\r\n  };\r\n\r\n  const handleExit = async () => {\r\n    await disconnectWallet();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundImage: `url(${vaultImage})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center top',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '0 0 50px 0',\r\n        '@media (min-width: 425px)': {\r\n          padding: '0 0 50px 0',\r\n        },\r\n        '@media (min-width: 768px)': {\r\n          padding: '0 0 50px 0',\r\n        },\r\n        '@media (min-width: 1024px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        '@media (min-width: 1440px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        '@media (min-width: 1920px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        marginBottom: '15px',\r\n        ...sx,\r\n      }}\r\n    >\r\n      {active && (\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            right: '15px',\r\n            top: '135px',\r\n            width: '25px',\r\n            height: '25px',\r\n            '@media (min-width: 375px)': {\r\n              right: '25px',\r\n              top: '135px',\r\n              width: '30px',\r\n              height: '30px',\r\n            },\r\n            '@media (min-width: 425px)': {\r\n              right: '25px',\r\n              top: '120px',\r\n              width: '30px',\r\n              height: '30px',\r\n            },\r\n            '@media (min-width: 768px)': {\r\n              right: '35px',\r\n              top: '175px',\r\n              width: '45px',\r\n              height: '45px',\r\n            },\r\n            '@media (min-width: 1024px)': {\r\n              right: '50px',\r\n              top: '235px',\r\n              width: '60px',\r\n            },\r\n            '@media (min-width: 1440px)': {\r\n              right: '50px',\r\n              top: '215px',\r\n              width: '70px',\r\n              height: '70px',\r\n            },\r\n            '@media (min-width: 1920px)': {\r\n              right: '70px',\r\n              top: '240px',\r\n              width: '80px',\r\n            },\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={handleExit}\r\n        >\r\n          <Box\r\n            component=\"img\"\r\n            src={exitImg}\r\n            sx={{\r\n              width: '100%',\r\n            }}\r\n          />\r\n        </Box>\r\n      )}\r\n      <Box\r\n        sx={{\r\n          padding: '25px 0 40px 0',\r\n          '@media (min-width: 375px)': {\r\n            padding: '25px 0 30px 0',\r\n          },\r\n          '@media (min-width: 425px)': {\r\n            padding: '20px 0',\r\n          },\r\n          '@media (min-width: 768px)': {\r\n            padding: '30px 0',\r\n          },\r\n          '@media (min-width: 1024px)': {\r\n            padding: '40px 0',\r\n          },\r\n          '@media (min-width: 1440px)': {\r\n            padding: '15px 0',\r\n          },\r\n          '@media (min-width: 1920px)': {\r\n            padding: '30px 0',\r\n          },\r\n        }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'LapsusBold',\r\n            color: '#db9b13',\r\n            textDecoration: 'none',\r\n            fontSize: 30,\r\n            letterSpacing: 7,\r\n            '@media (min-width: 375px)': {\r\n              fontSize: 40,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 425px)': {\r\n              fontSize: 40,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 768px)': {\r\n              fontSize: 60,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 1024px)': {\r\n              fontSize: 70,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 1440px)': {\r\n              fontSize: 90,\r\n              letterSpacing: 15,\r\n            },\r\n            '@media (min-width: 1920px)': {\r\n              fontSize: 110,\r\n              letterSpacing: 20,\r\n            },\r\n          }}\r\n        >\r\n          Analytics Dashboard\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* {time.data && (\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            right: '20px',\r\n            top: '70px',\r\n            '@media (min-width: 375px)': {\r\n              right: '20px',\r\n              top: '70px',\r\n            },\r\n            '@media (min-width: 425px)': {\r\n              right: '20px',\r\n              top: '72px',\r\n            },\r\n            '@media (min-width: 768px)': {\r\n              right: '20px',\r\n              top: '90px',\r\n            },\r\n            '@media (min-width: 1025px)': {\r\n              right: '20px',\r\n              top: '60px',\r\n            },\r\n            '@media (min-width: 1440px)': {\r\n              transform: 'rotate(-10deg)',\r\n              right: '20px',\r\n              top: '50px',\r\n            },\r\n          }}\r\n        >\r\n          <Timer targetTime={time.data.lockTime} />\r\n        </Box>\r\n      )} */}\r\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'LapsusBold',\r\n            display: 'block',\r\n            color: 'black',\r\n            textDecoration: 'none',\r\n            fontSize: 22,\r\n            '@media (min-width: 768px)': {\r\n              WebkitTextStroke: '2px #d89810',\r\n              fontSize: 32,\r\n            },\r\n            '@media (min-width: 1024px)': {\r\n              fontSize: 42,\r\n            },\r\n            WebkitTextStroke: '1px #d89810',\r\n          }}\r\n        >\r\n          Vault\r\n          <br />\r\n          Total Claimable Value Locked(TCVL):{' '}\r\n          {`$${tvcl ? tvcl.toFixed(2) : ''}`}\r\n          <br />\r\n          Vault Backing Per NFT:{' '}\r\n          {`$${tvcl ? (tvcl / config.totalSupply).toFixed(2) : ''} / ${\r\n            ethPrice > 0\r\n              ? (tvcl / config.totalSupply / ethPrice).toFixed(3)\r\n              : ''\r\n          } ETH`}\r\n        </Typography>\r\n      </Box>\r\n      {!active && (\r\n        <Box\r\n          sx={{\r\n            display: 'grid',\r\n            rowGap: 2,\r\n            columnGap: 4,\r\n            width: '80%',\r\n            '@media (min-width: 1025px)': {\r\n              gridTemplateColumns: 'repeat(1, 1fr)',\r\n            },\r\n            justifyContent: 'flex-start',\r\n          }}\r\n        >\r\n          {config['assets'] &&\r\n            config['assets'].map((asset, index) => (\r\n              <Link\r\n                key={`Vaults-Link${index}`}\r\n                target=\"_blank\"\r\n                href={config['coinGeckoBaseUrl'] + asset['url']}\r\n                sx={{\r\n                  fontFamily: 'LapsusBold',\r\n                  display: 'block',\r\n                  color: 'black',\r\n                  textDecoration: 'none',\r\n                  fontSize: 20,\r\n                  '@media (min-width: 768px)': {\r\n                    WebkitTextStroke: '2px #d89810',\r\n                    fontSize: 30,\r\n                  },\r\n                  '@media (min-width: 1024px)': {\r\n                    fontSize: 40,\r\n                  },\r\n                  WebkitTextStroke: '1px #d89810',\r\n                }}\r\n              >\r\n                {`${asset['name']} (${asset['symbol']}) / ${\r\n                  amountList\r\n                    ? `$` + amountList[asset['url']]\r\n                      ? amountList[asset['url']].toFixed(2)\r\n                      : '' + ` / ` + amountList[asset['url']]\r\n                      ? ((amountList[asset['url']] / tvcl) * 100.0).toFixed(2)\r\n                      : '' + `%`\r\n                    : ''\r\n                }`}\r\n              </Link>\r\n            ))}\r\n        </Box>\r\n      )}\r\n      {active && (\r\n        <Box\r\n          sx={{\r\n            marginTop: '20px',\r\n            width: '90%',\r\n            '@media (min-width: 1024px)': {\r\n              marginTop: '50px',\r\n            },\r\n          }}\r\n          flex\r\n          flexBasis=\"column\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box\r\n            sx={{\r\n              maxWidth: '700px',\r\n              margin: 'auto',\r\n            }}\r\n          >\r\n            {data &&\r\n              data.map((coin, index) => {\r\n                if (index === 2) {\r\n                  return (\r\n                    <Typography\r\n                      key={`Asset-${index}`}\r\n                      sx={{\r\n                        fontFamily: 'LapsusBold',\r\n                        fontSize: 23,\r\n                        '@media (min-width: 425px)': {\r\n                          fontSize: 25,\r\n                        },\r\n                        '@media (min-width: 768px)': {\r\n                          WebkitTextStroke: '2px #d89810',\r\n                          fontSize: 40,\r\n                        },\r\n                        '@media (min-width: 1024px)': {\r\n                          fontSize: 50,\r\n                        },\r\n                        textAlign: 'left',\r\n                        WebkitTextStroke: '1px #d89810',\r\n                      }}\r\n                    >\r\n                      {`${coin.name}: ${Number(\r\n                        ((tokenIds.length - usedTokenIdsOf.length) *\r\n                          coin.amount) /\r\n                          config.totalSupply\r\n                      ).toFixed(0)} ${coin.symbol}`}\r\n                    </Typography>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <Typography\r\n                      key={`Asset-${index}`}\r\n                      sx={{\r\n                        fontFamily: 'LapsusBold',\r\n                        fontSize: 23,\r\n                        '@media (min-width: 425px)': {\r\n                          fontSize: 25,\r\n                        },\r\n                        '@media (min-width: 768px)': {\r\n                          WebkitTextStroke: '2px #d89810',\r\n                          fontSize: 40,\r\n                        },\r\n                        '@media (min-width: 1024px)': {\r\n                          fontSize: 50,\r\n                        },\r\n                        textAlign: 'left',\r\n                        WebkitTextStroke: '1px #d89810',\r\n                      }}\r\n                    >\r\n                      {`${coin.name}: ${Number(\r\n                        ((tokenIds.length - usedTokenIdsOf.length) *\r\n                          coin.amount) /\r\n                          config.totalSupply\r\n                      ).toFixed(4)} ${coin.symbol}`}\r\n                    </Typography>\r\n                  );\r\n                }\r\n              })}\r\n          </Box>\r\n          <Box textAlign=\"center\">\r\n            <Button\r\n              sx={{\r\n                marginTop: '30px',\r\n                cursor: 'pointer',\r\n                width: '70%',\r\n                fontFamily: 'LapsusBold',\r\n                fontSize: '20px',\r\n                padding: '15px 10px',\r\n                '@media (min-width: 768px)': {\r\n                  marginTop: '70px',\r\n                  fontSize: 40,\r\n                },\r\n                '@media (min-width: 1024px)': {\r\n                  fontSize: 50,\r\n                },\r\n                color: '#fac718',\r\n                backgroundColor: 'black',\r\n                border: '10px solid white',\r\n                borderRadius: '60px',\r\n                maxWidth: '900px',\r\n                lineHeight: '1',\r\n                letterSpacing: '7px',\r\n                transform: 'rotate(-5deg)',\r\n                opacity:\r\n                  claimable && tokenIds.length - usedTokenIdsOf.length !== 0\r\n                    ? 1\r\n                    : 0.3,\r\n                '&:disabled': {\r\n                  color: '#fac718',\r\n                },\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n                },\r\n              }}\r\n              onClick={onClaim}\r\n              disabled={\r\n                !claimable || tokenIds.length - usedTokenIdsOf.length === 0\r\n              }\r\n            >\r\n              CLAIM YOUR ASSETS NOW\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      {/* {tokenIds}\r\n      <LoadingButton\r\n        disabled={!(active && claimable && tokenIds.length > 0)}\r\n        onClick={onClaim}\r\n        loading={isClaiming}\r\n      >\r\n        Claim\r\n      </LoadingButton> */}\r\n      <ResponsiveContainer width={'80%'} height={300} min-width={300}>\r\n        <LineChart\r\n          data={prices}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" />\r\n          <XAxis\r\n            dataKey=\"name\"\r\n            stroke=\"#dc982c\"\r\n            label={{\r\n              value: 'Time',\r\n              position: 'center',\r\n              fill: '#dc982c',\r\n            }}\r\n            // dy={10}\r\n            // tick={false}\r\n          />\r\n          <YAxis\r\n            stroke=\"#dc982c\"\r\n            label={{\r\n              value: '$ USD',\r\n              angle: -90,\r\n              position: 'insideLeft',\r\n              fill: '#dc982c',\r\n            }}\r\n            dx={2}\r\n            // tick={false}\r\n          />\r\n          <Tooltip />\r\n          {/* <Legend /> */}\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"Vault\"\r\n            stroke=\"#dc982c\"\r\n            activeDot={{ r: 8 }}\r\n          />\r\n          <Line type=\"monotone\" dataKey=\"Floor\" stroke=\"#82ca9d\" />\r\n          {/* <Line type=\"monotone\" dataKey=\"dogelon-mars\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"pax-gold\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"quant-network\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"hex\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"usd-coin\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"old-bitcoin\" stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"laika\" stroke=\"#8884d8\" /> */}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Vault;\r\n","import sidebarURL from 'assets/images/widesidebar.jpg';\nimport MainContainer from 'components/MainContainer';\n// import MintStatus from 'pages/MintPage/MintStatus';\n// import NFTCarousel from 'pages/MintPage/NFTCarousel';\n// import RoadMap from 'pages/MintPage/RoadMap';\n// import SecretSauce from 'pages/MintPage/SecretSauce';\n// import TeamInfo from 'pages/MintPage/TeamInfo';\nimport Vault from 'pages/AnalyticsPage/Vault';\nimport { useEffect } from 'react';\nimport React from 'react';\nimport LazyLoad from 'react-lazyload';\nimport { store } from 'store';\nimport {\n  setCurrentPhase,\n  setCurrentTokenId,\n  setPrice,\n} from 'store/actions/globalActions';\n\nimport { Box } from '@mui/material';\n\nfunction AnalyticsPage() {\n  //   useEffect(() => {\n  //     store.dispatch(setCurrentPhase());\n  //     store.dispatch(setPrice());\n  //     store.dispatch(setCurrentTokenId());\n  //   }, []);\n\n  return (\n    <MainContainer>\n      <Box\n        sx={{\n          width: '100%',\n        }}\n      >\n        <LazyLoad height={200}>\n          <Box\n            sx={{\n              display: 'black',\n              height: '80px',\n              backgroundImage: `url(${sidebarURL})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'left top',\n              '@media (min-width: 768px)': {\n                height: '120px',\n              },\n              '@media (min-width: 769px)': {\n                display: 'none',\n              },\n            }}\n          />\n        </LazyLoad>\n        <Vault />\n        {/* <MintStatus />\n        <NFTCarousel />\n        <Box\n          sx={{\n            marginBottom: '13px',\n            '@media (min-width: 769px)': {\n              display: 'grid',\n              columnGap: '35px',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n            },\n          }}\n        >\n          <SecretSauce />\n          <RoadMap />\n        </Box>\n        <Vault />\n        <TeamInfo /> */}\n      </Box>\n    </MainContainer>\n  );\n}\n\nexport default AnalyticsPage;\n"],"names":["PRICE_URL","TYPE_PERIOD","sx","useState","prices","setPrices","floor","setFloor","tvcl","setTVCL","amountList","setAmountList","ethPrice","setEthPrice","getPriceData","coin","fetch","mode","res","json","coinPromises","map","useWeb3React","active","account","useAppSelector","state","global","tokenIds","claimable","usedTokenIdsOf","coins","disconnectWallet","useDisconnectWallet","useFetch","config","data","getAll","loading","error","Promise","all","lengths","item","length","minLength","Math","min","newRes","val","i","push","chainlink","hex","laika","ethereum","totalAmount","latest","assetAmountList","newUSD","index","name","moment","subtract","date","format","Vault","Floor","console","log","slice","getFloor","getFloorPrice","price","useEffect","store","setTokenIds","setUsedTokenIdsOf","onClaim","remain","filter","id","includes","assetService","tx","toast","handleExit","Box","backgroundImage","vaultImage","backgroundRepeat","backgroundSize","backgroundPosition","position","display","flexDirection","justifyContent","alignItems","padding","marginBottom","right","top","width","height","cursor","onClick","component","src","exitImg","Typography","fontFamily","color","textDecoration","fontSize","letterSpacing","WebkitTextStroke","toFixed","rowGap","columnGap","gridTemplateColumns","asset","Link","target","href","marginTop","flex","flexBasis","maxWidth","margin","textAlign","Number","amount","symbol","Button","backgroundColor","border","borderRadius","lineHeight","transform","opacity","disabled","ResponsiveContainer","LineChart","left","bottom","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","label","value","fill","YAxis","angle","dx","Tooltip","Line","type","activeDot","r","MainContainer","sidebarURL"],"sourceRoot":""}