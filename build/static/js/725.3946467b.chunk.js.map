{"version":3,"file":"static/js/725.3946467b.chunk.js","mappings":"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","sources":["components/WelcomeComponent/index.jsx","components/MainContainer/index.jsx","config/index.jsx","hooks/connectors.jsx","hooks/useConnectWallet.jsx","hooks/useEagerConnect.jsx","utils/utils.jsx","hooks/useSwitchChain.js","components/ConnectWalletButton/index.jsx","hooks/useCountDown.jsx","services/blockchain/blockchainService.jsx","services/blockchain/sugarHeadService.jsx","store/actions/globalActions.jsx","components/Timer/index.jsx","hooks/useFetch.jsx","pages/MintPage/MintBox/index.jsx","pages/MintPage/MintStatus/index.jsx","pages/MintPage/NFTCarousel/index.jsx","pages/MintPage/RoadMap/index.jsx","pages/MintPage/SecretSauce/index.jsx","pages/MintPage/TeamInfo/index.jsx","services/blockchain/assetService.jsx","pages/MintPage/Vault/index.jsx","pages/MintPage/index.jsx","assets/images/nfts|sync|/^/.//.*/.png$"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\n\r\nfunction WelcomeComponent() {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        position: 'absolute',\r\n        height: '222vw',\r\n        backgroundColor: 'white',\r\n        left: '0%',\r\n        top: '0%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Typography sx={{ fontFamily: 'LapsusBold', marginTop: '-166.5vw' }}>\r\n        Welcome\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WelcomeComponent;\r\n","import mobileBackgroundURL from 'assets/images/background_mobilev4.png';\r\nimport backgroundURL from 'assets/images/background1.png';\r\nimport tabletBackgroundURL from 'assets/images/mobile_tabletbackgroundv2.png';\r\nimport sidebarURL from 'assets/images/sidebar.png';\r\nimport WelcomeComponent from 'components/WelcomeComponent';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Box, Container } from '@mui/material';\r\n\r\nfunction MainContainer({ children }) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundImage: `url(${mobileBackgroundURL})`,\r\n        backgroundPosition: 'center top',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        paddingTop: '103px',\r\n        '@media (min-width: 375px)': {\r\n          paddingTop: '110px',\r\n        },\r\n        '@media (min-width: 425px)': {\r\n          paddingTop: '115px',\r\n        },\r\n        '@media (min-width: 768px)': {\r\n          backgroundImage: `url(${tabletBackgroundURL})`,\r\n          paddingTop: '267px',\r\n        },\r\n        '@media (min-width: 1024px)': {\r\n          backgroundImage: `url(${backgroundURL})`,\r\n          paddingTop: '328px',\r\n        },\r\n        '@media (min-width: 1440px)': {\r\n          paddingTop: '310px',\r\n        },\r\n        '@media (min-width: 1920px)': {\r\n          paddingTop: '360px',\r\n        },\r\n      }}\r\n    >\r\n      <Container\r\n        disableGutters\r\n        sx={{\r\n          display: 'flex',\r\n          padding: '0 15px',\r\n          maxWidth: {\r\n            lg: '2030px',\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'none',\r\n            width: '150px',\r\n            backgroundImage: `url(${sidebarURL})`,\r\n            backgroundSize: 'contain',\r\n            '@media (min-width: 769px)': {\r\n              display: 'block',\r\n            },\r\n          }}\r\n        />\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'flex-start',\r\n            '@media (min-width: 769px)': {\r\n              width: 'calc(100% - 165px)',\r\n            },\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n        {/* <WelcomeComponent /> */}\r\n        {/* {isLoading && <WelcomeComponent />} */}\r\n        {/* <BackgroundImage setLoading={setIsLoading} /> */}\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MainContainer;\r\n","import configDev from './config.dev.json';\r\nimport configProd from './config.real.json';\r\n\r\nconst NODE_ENVS = {\r\n  DEV: 'development',\r\n  PROD: 'production',\r\n};\r\nconst config = process.env.NODE_ENV === NODE_ENVS.DEV ? configDev : configProd;\r\n\r\nexport default config;\r\n","import config from 'config';\r\n\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedchainIds: [config.chainId],\r\n});\r\n\r\nexport const connectorsByName = {\r\n  Injected: injected,\r\n};\r\n\r\nexport const connectorName = 'Injected';\r\n","import { connectorName, connectorsByName } from 'hooks/connectors';\n\nimport { useWeb3React } from '@web3-react/core';\n\nfunction useConnectWallet() {\n  const { activate } = useWeb3React();\n  return () => {\n    activate(connectorsByName[connectorName]);\n  };\n}\n\nexport default useConnectWallet;\n","import { injected } from 'hooks/connectors';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nfunction useEagerConnect() {\r\n  const { activate, active } = useWeb3React();\r\n\r\n  const [tried, setTried] = useState(false);\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true);\r\n        });\r\n      } else {\r\n        setTried(true);\r\n      }\r\n    });\r\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true);\r\n    }\r\n  }, [tried, active]);\r\n\r\n  return tried;\r\n}\r\n\r\nexport default useEagerConnect;\r\n","const convertToHex = (value) => {\r\n  return ['0x', value.toString(16)].join('');\r\n};\r\n\r\nfunction shortWeb3Acount(currentAccount) {\r\n  if (currentAccount) {\r\n    return currentAccount\r\n      .slice(0, 6)\r\n      .concat('...')\r\n      .concat(\r\n        currentAccount.slice(currentAccount.length - 4, currentAccount.length)\r\n      );\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst sleep = (milliseconds) => {\r\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n};\r\n\r\nexport { convertToHex, shortWeb3Acount, sleep };\r\n","import { convertToHex } from 'utils/utils';\n\nfunction useSwitchChain() {\n  return (chainId) => {\n    (async function () {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: convertToHex(chainId) }], // chainId must be in hexadecimal numbers\n      });\n    })();\n  };\n}\n\nexport default useSwitchChain;\n","import connectBtnImage from 'assets/images/connect_btn.png';\nimport config from 'config';\nimport { useConnectWallet, useSwitchChain } from 'hooks';\nimport React, { useEffect } from 'react';\nimport { shortWeb3Acount } from 'utils/utils';\n\nimport { Button } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\n\nconst ConnectWalletButton = () => {\n  const connectWallet = useConnectWallet();\n  const switchChain = useSwitchChain();\n  const { account, chainId } = useWeb3React();\n  const handleConnect = async () => {\n    await connectWallet();\n  };\n\n  useEffect(() => {\n    if (chainId && chainId !== config.chainId) {\n      switchChain(config.chainId);\n    }\n  }, [chainId, switchChain]);\n\n  return (\n    <React.Fragment>\n      {/* {account ? (\n        <Button>{shortWeb3Acount(account)}</Button>\n      ) : ( */}\n      <Button\n        onClick={handleConnect}\n        sx={{\n          marginTop: '50px',\n          fontFamily: 'LapsusBold',\n          fontSize: '15px',\n          padding: '5px 5px',\n          letterSpacing: '2px',\n          '@media (min-width: 768px)': {\n            border: '10px solid white',\n            letterSpacing: '8px',\n            fontSize: '40px',\n          },\n          '@media (min-width: 1024px)': {\n            fontSize: '60px',\n          },\n          color: '#fac718',\n          backgroundColor: 'black',\n          border: '5px solid white',\n          borderRadius: '60px',\n          maxWidth: '1000px',\n          lineHeight: '1.2',\n          width: '60%',\n          transform: 'rotate(-5deg)',\n          '&:hover': {\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          },\n        }}\n      >\n        CONNECT WALLET & MINT NOW!\n      </Button>\n      {/* )} */}\n    </React.Fragment>\n  );\n};\n\nexport default ConnectWalletButton;\n","import { useEffect, useState } from 'react';\r\n\r\nconst useCountdown = (targetDate) => {\r\n  const countDownDate = new Date(targetDate).getTime();\r\n\r\n  const [countDown, setCountDown] = useState(\r\n    countDownDate - new Date().getTime()\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCountDown(countDownDate - new Date().getTime());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [countDownDate]);\r\n\r\n  return getReturnValues(countDown);\r\n};\r\n\r\nconst getReturnValues = (countDown) => {\r\n  // calculate time left\r\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n  return [days, hours, minutes, seconds];\r\n};\r\n\r\nexport { useCountdown };\r\n","import config from 'config';\r\nimport Web3 from 'web3';\r\n\r\nclass BlockchainService {\r\n  constructor() {\r\n    const selectedProvider = Math.floor(\r\n      Math.random() * config.chainRpcUrls.length\r\n    );\r\n    const blockchainProvider = config.chainRpcUrls[selectedProvider];\r\n\r\n    this.web3 = new Web3(new Web3.providers.HttpProvider(blockchainProvider));\r\n    this.chainId = config.chainId;\r\n  }\r\n\r\n  getNonce = async (address) => this.web3.eth.getTransactionCount(address);\r\n\r\n  getEthBalance = async (address) => this.web3.eth.getBalance(address);\r\n\r\n  // sign transaction using metamask\r\n  signTransaction = async (address, dataABI, _etherAmount) => {\r\n    const transactionParameters = {\r\n      to: this.contractAddress, // Required except during contract publications.\r\n      from: address, // must match user's active address.\r\n      data: dataABI,\r\n      chainId: this.chainId,\r\n      value: parseInt(_etherAmount).toString(16), // this should be hex !!!!\r\n    };\r\n\r\n    //sign the transaction\r\n    try {\r\n      const txHash = await window.ethereum.request({\r\n        method: 'eth_sendTransaction',\r\n        params: [transactionParameters],\r\n      });\r\n      return await this.checkTx(txHash);\r\n    } catch (error) {\r\n      alert('There was an error in sending transaction. Please try again.');\r\n      console.log(error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  checkTx = async (txHash) => {\r\n    // let result = await web3.eth.getTransaction(txHash)\r\n    let result = null;\r\n    while (result == null) {\r\n      result = await this.web3.eth.getTransactionReceipt(txHash.toString());\r\n    }\r\n    if (result.status) return txHash;\r\n    else return null;\r\n  };\r\n}\r\n\r\nconst blockchainService = new BlockchainService();\r\n\r\nexport default BlockchainService;\r\nexport { blockchainService };\r\n","import ERC721Abi from 'abi/ERC721.json';\r\nimport SugarHeadAbi from 'abi/SugarHeadNFT.json';\r\nimport config from 'config';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport BlockchainService from './blockchainService';\r\n\r\nclass SugarHeadService extends BlockchainService {\r\n  constructor(sugarHeadAddr, chadinuAddr, dvdaAddr) {\r\n    super();\r\n    this.contractAddress = sugarHeadAddr;\r\n    this.contract = new this.web3.eth.Contract(SugarHeadAbi, sugarHeadAddr);\r\n    this.chadinuContract = new this.web3.eth.Contract(ERC721Abi, chadinuAddr);\r\n    this.dvdaContract = new this.web3.eth.Contract(ERC721Abi, dvdaAddr);\r\n  }\r\n\r\n  getTokenIdsOf = async (address) =>\r\n    this.contract.methods.getTokenIdsOf(address).call();\r\n\r\n  getCurrentTokenId = async () =>\r\n    this.contract.methods.getCurrentTokenId().call();\r\n\r\n  getPrice = async () => this.contract.methods.getPrice().call();\r\n\r\n  getCurrentPhase = async () => this.contract.methods.currentPhase().call();\r\n\r\n  checkAmount = async (amount) => {\r\n    if (amount > config.maxTicketsPerTX) {\r\n      toast.error(\r\n        `You can't buy more than ${config.maxTicketsPerTX} tickets at once.`\r\n      );\r\n      return false;\r\n    }\r\n    if (amount < 0) {\r\n      toast.error(`Invalid Amount`);\r\n      return false;\r\n    }\r\n\r\n    const currentTokenId = parseInt(await this.getCurrentTokenId());\r\n    if (currentTokenId + amount >= config.totalSuppy) {\r\n      toast.error(`Remained NFTs are less than ${amount}`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  checkEthBalance = async (from, ethAmount) => {\r\n    const ethBalance = await this.getEthBalance(from);\r\n    if (Number(ethBalance) < ethAmount) {\r\n      toast.error(\"You don't have enough fund\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  checkIsEarlyMinter = async (from) => {\r\n    const isEarlyMinter = await this.contract.methods\r\n      .isEarlyMinter(from)\r\n      .call();\r\n    const isDVDAHolder =\r\n      parseInt(await this.dvdaContract.methods.balanceOf(from).call()) > 0;\r\n\r\n    if (isDVDAHolder || isEarlyMinter) return true;\r\n    else {\r\n      toast.error(\"You aren't whitelisted as a early minter.\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  buyNFTWithChadinu = async (from) => {\r\n    try {\r\n      const isChadVipHolder =\r\n        parseInt(await this.chadinuContract.methods.balanceOf(from).call()) > 0;\r\n\r\n      if (!isChadVipHolder) {\r\n        toast.error(\"You aren't chadinu vip holder.\");\r\n        return null;\r\n      }\r\n      const dataAbi = this.contract.methods.buyNFTWithChadinu().encodeABI();\r\n      const txHash = await this.signTransaction(from, dataAbi, 0);\r\n      return txHash;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  buyNFTForFree = async (from) => {\r\n    try {\r\n      const isWhitelisted =\r\n        parseInt(await this.contract.methods.freeMinters(from).call()) > 0;\r\n\r\n      if (!isWhitelisted) {\r\n        toast.error(\"You aren't whitelisted.\");\r\n        return null;\r\n      }\r\n      const dataAbi = this.contract.methods.buyNFTForFree().encodeABI();\r\n      const txHash = await this.signTransaction(from, dataAbi, 0);\r\n      return txHash;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  buyNFTEarly = async (from, amount, price) => {\r\n    try {\r\n      const ethAmount = price * amount;\r\n      const isEarlyMinter = await this.checkIsEarlyMinter(from);\r\n      const isFundSufficient = await this.checkEthBalance(from, ethAmount);\r\n      const isAmountValid = await this.checkAmount(amount);\r\n      if (!isAmountValid || !isFundSufficient || !isEarlyMinter) return null;\r\n\r\n      const dataAbi = this.contract.methods.buyNFTEarly(amount).encodeABI();\r\n      const txHash = await this.signTransaction(from, dataAbi, ethAmount);\r\n      return txHash;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  buyNFTsInPublic = async (from, amount, price) => {\r\n    try {\r\n      const ethAmount = price * amount;\r\n      const isFundSufficient = await this.checkEthBalance(from, ethAmount);\r\n      const isAmountValid = await this.checkAmount(amount);\r\n      if (!isAmountValid || !isFundSufficient) return null;\r\n\r\n      const dataAbi = this.contract.methods.buyNFTsInPublic(amount).encodeABI();\r\n      const txHash = await this.signTransaction(from, dataAbi, ethAmount);\r\n      return txHash;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\nconst sugarHeadService = new SugarHeadService(\r\n  config.sugarHeadAddress,\r\n  config.chadinuAddress,\r\n  config.dvdaAddress\r\n);\r\n\r\nexport default SugarHeadService;\r\nexport { sugarHeadService };\r\n","import { sugarHeadService } from 'services/blockchain/sugarHeadService';\r\n\r\nimport { actionTypes } from './types';\r\n\r\nconst setCurrentPhase = () => {\r\n  return async (dispatch) => {\r\n    const currentPhase = parseInt(await sugarHeadService.getCurrentPhase());\r\n    dispatch({\r\n      type: actionTypes.setCurrentPhase,\r\n      currentPhase,\r\n    });\r\n  };\r\n};\r\n\r\nconst setPrice = () => {\r\n  return async (dispatch) => {\r\n    const price = parseInt(await sugarHeadService.getPrice());\r\n    dispatch({\r\n      type: actionTypes.setPrice,\r\n      price,\r\n    });\r\n  };\r\n};\r\n\r\nconst setCurrentTokenId = () => {\r\n  return async (dispatch) => {\r\n    const currentTokenId = parseInt(await sugarHeadService.getCurrentTokenId());\r\n    dispatch({\r\n      type: actionTypes.setCurrentTokenId,\r\n      currentTokenId,\r\n    });\r\n  };\r\n};\r\n\r\nconst setTokenIds = (from) => {\r\n  return async (dispatch) => {\r\n    const tokenIds = await sugarHeadService.getTokenIdsOf(from);\r\n    console.log('token', tokenIds);\r\n    dispatch({\r\n      type: actionTypes.setTokenIds,\r\n      tokenIds,\r\n    });\r\n  };\r\n};\r\n\r\nconst setClaimable = () => {\r\n  return {\r\n    type: actionTypes.setClaimable,\r\n  };\r\n};\r\n\r\nexport {\r\n  setClaimable,\r\n  setCurrentPhase,\r\n  setCurrentTokenId,\r\n  setPrice,\r\n  setTokenIds,\r\n};\r\n","import { useCountdown } from 'hooks/useCountDown';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { store } from 'store';\r\nimport { setClaimable } from 'store/actions/globalActions';\r\n\r\nimport { Typography } from '@mui/material';\r\n\r\nfunction Timer({ targetTime }) {\r\n  const [days, hours, minutes, seconds] = useCountdown(targetTime);\r\n  const [isExpired, setIsExpired] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (days + hours + minutes + seconds <= 0) {\r\n      store.dispatch(setClaimable());\r\n      setIsExpired(true);\r\n    }\r\n  }, [days, hours, minutes, seconds]);\r\n\r\n  if (isExpired) {\r\n    return (\r\n      <Typography variant=\"h1\" component=\"h2\">\r\n        Expired\r\n      </Typography>\r\n    );\r\n  } else {\r\n    return (\r\n      <Typography\r\n        sx={{\r\n          fontFamily: 'LapsusBold',\r\n          fontSize: 15,\r\n          color: '#db9b13',\r\n\r\n          '@media (min-width: 768px)': {\r\n            fontSize: 25,\r\n          },\r\n          '@media (min-width: 1024px)': {\r\n            fontSize: 25,\r\n          },\r\n          '@media (min-width: 1440px)': {\r\n            fontSize: 45,\r\n          },\r\n        }}\r\n      >\r\n        {days}d : {hours}h : {minutes}m : {seconds}s\r\n      </Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setdata] = useState(null);\r\n  const [loading, setloading] = useState(true);\r\n  const [error, seterror] = useState('');\r\n  useEffect(() => {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setdata(response.data);\r\n        setloading(false);\r\n      })\r\n      .catch((error) => {\r\n        seterror(error);\r\n        setloading(false);\r\n      });\r\n  }, [url]);\r\n  return { data, loading, error };\r\n};\r\nexport default useFetch;\r\n","import mintBtn from 'assets/images/mint_btn.png';\nimport mintBox from 'assets/images/mintbox_noletter.png';\nimport nft from 'assets/images/nfts/1.png';\nimport Timer from 'components/Timer';\nimport config from 'config';\nimport useFetch from 'hooks/useFetch';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport { toast } from 'react-toastify';\nimport { sugarHeadService } from 'services/blockchain/sugarHeadService';\nimport { useAppSelector } from 'store';\nimport { store } from 'store';\nimport { setCurrentTokenId } from 'store/actions/globalActions';\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Typography,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { useWeb3React } from '@web3-react/core';\n\nconst BREAKPOINTS = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 1,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 768 },\n    items: 1,\n  },\n  smallTablet: {\n    breakpoint: { max: 768, min: 425 },\n    items: 1,\n  },\n  mobile: {\n    breakpoint: { max: 425, min: 0 },\n    items: 1,\n  },\n};\n\nconst useStyles = makeStyles({\n  customOutline: {\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#db9b13',\n    },\n    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#db9b13',\n    },\n  },\n});\n\nfunction MintBox({ sx }) {\n  const [mintNumber, setMintNumber] = useState(0);\n  const [chadinu, setChadinu] = useState(false);\n\n  const { active, account } = useWeb3React();\n  const { price, currentTokenId, currentPhase } = useAppSelector(\n    (state) => state.global\n  );\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    // console.log(data, loading, error);\n  }, []);\n\n  const onMint = async () => {\n    if (!active) {\n      toast.error(\"Metamask isn't connected.\");\n      return;\n    }\n    let tx;\n    if (currentPhase === 0 && chadinu) {\n      tx = await sugarHeadService.buyNFTWithChadinu(account);\n    }\n    if (currentPhase === 0 && chadinu === false) {\n      tx = await sugarHeadService.buyNFTForFree(account);\n    }\n    if (currentPhase === 1) {\n      tx = await sugarHeadService.buyNFTEarly(account, mintNumber, price);\n    }\n    if (currentPhase === 2) {\n      tx = await sugarHeadService.buyNFTsInPublic(account, mintNumber, price);\n    }\n    if (tx !== null) {\n      toast.success('Successfully bought!');\n      store.dispatch(setCurrentTokenId());\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log(price, currentTokenId);\n  // }, [price, currentTokenId]);\n\n  const handleChange = (e) => {\n    setMintNumber(e.target.value);\n  };\n\n  const handleRadioChange = (e) => {\n    if (e.target.value !== 'female') {\n      setChadinu(true);\n    } else {\n      setChadinu(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${mintBox})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center top',\n        position: 'relative',\n        marginBottom: '15px',\n        ...sx,\n      }}\n    >\n      <Box textAlign=\"center\" pt=\"50px\">\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            fontSize: 25,\n            color: 'black',\n            '@media (min-width: 768px)': {\n              fontSize: 55,\n              letterSpacing: '5px',\n              WebkitTextStroke: '3px #db9b13',\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 65,\n            },\n            '@media (min-width: 1440px)': {\n              fontSize: 90,\n            },\n            WebkitTextStroke: '2px #db9b13',\n          }}\n        >\n          MINT YOUR NFTs NOW\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(1, 1fr)',\n          '@media (min-width: 768px)': {\n            gridTemplateColumns: 'repeat(2, 1fr)',\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            order: 1,\n            flexDirection: 'column',\n            '@media (min-width: 768px)': {\n              padding: '50px 0 50px 0',\n              order: 0,\n            },\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          pb=\"50px\"\n        >\n          {(currentPhase === 2 || currentPhase === 1) && (\n            <Box width=\"100%\" textAlign=\"center\">\n              <Typography\n                mb=\"50px\"\n                sx={{\n                  fontFamily: 'LapsusBold',\n                  fontSize: 15,\n                  color: '#db9b13',\n                  '@media (min-width: 768px)': {\n                    fontSize: 30,\n                    color: 'black',\n                  },\n                  '@media (min-width: 1024px)': {\n                    fontSize: 35,\n                  },\n                  '@media (min-width: 1440px)': {\n                    WebkitTextStroke: '3px #db9b13',\n                    fontSize: 50,\n                  },\n                  WebkitTextStroke: '2px #db9b13',\n                }}\n              >\n                CHOOSE HOW MANY NFTs\n              </Typography>\n              <FormControl\n                sx={{\n                  width: '200px',\n                  margin: 'auto',\n                  '@media (min-width: 768px)': {\n                    fontSize: 30,\n                  },\n                  '@media (min-width: 1024px)': {\n                    fontSize: 35,\n                  },\n                  '& .MuiFormLabel-root': {\n                    color: '#db9b13',\n                  },\n                }}\n              >\n                <InputLabel\n                  id=\"mint-select-label\"\n                  sx={{\n                    fontFamily: 'LapsusBold',\n                    fontSize: '1em',\n                    color: '#db9b13',\n                  }}\n                >\n                  Mint Number\n                </InputLabel>\n                <Select\n                  className={classes.customOutline}\n                  labelId=\"mint-select-label\"\n                  label=\"Mint Number\"\n                  onChange={handleChange}\n                  sx={{\n                    fontFamily: 'LapsusBold',\n                    fontSize: '1em',\n                    textAlign: 'left',\n                    color: '#db9b13',\n                  }}\n                  defaultValue={1}\n                >\n                  <MenuItem value={1} sx={{ fontFamily: 'LapsusBold' }}>\n                    1\n                  </MenuItem>\n                  <MenuItem value={2} sx={{ fontFamily: 'LapsusBold' }}>\n                    2\n                  </MenuItem>\n                  <MenuItem value={3} sx={{ fontFamily: 'LapsusBold' }}>\n                    3\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          )}\n          {currentPhase === 0 && (\n            <Box>\n              <FormControl>\n                <FormLabel\n                  sx={{\n                    fontFamily: 'LapsusBold',\n                    fontSize: 30,\n                    '@media (min-width: 768px)': {\n                      fontSize: 40,\n                    },\n                    '@media (min-width: 1024px)': {\n                      fontSize: 50,\n                    },\n                    '@media (min-width: 1440px)': {\n                      fontSize: 60,\n                    },\n                    color: 'black',\n                  }}\n                >\n                  Free Mint\n                </FormLabel>\n                <RadioGroup defaultValue=\"female\" onChange={handleRadioChange}>\n                  <FormControlLabel\n                    value=\"male\"\n                    control={<Radio />}\n                    label=\"Chadinu\"\n                    sx={{\n                      '& .MuiTypography-root': {\n                        fontFamily: 'LapsusBold',\n                        fontSize: 20,\n                        '@media (min-width: 768px)': {\n                          fontSize: 30,\n                        },\n                        '@media (min-width: 1024px)': {\n                          fontSize: 40,\n                        },\n                        '@media (min-width: 1440px)': {\n                          fontSize: 50,\n                        },\n                      },\n                    }}\n                  />\n                  <FormControlLabel\n                    value=\"female\"\n                    control={<Radio />}\n                    label=\"WhiteList\"\n                    sx={{\n                      '& .MuiTypography-root': {\n                        fontFamily: 'LapsusBold',\n                        fontSize: 20,\n                        '@media (min-width: 768px)': {\n                          fontSize: 30,\n                        },\n                        '@media (min-width: 1024px)': {\n                          fontSize: 40,\n                        },\n                        '@media (min-width: 1440px)': {\n                          fontSize: 50,\n                        },\n                      },\n                    }}\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Box>\n          )}\n          <Button\n            onClick={onMint}\n            sx={{\n              fontFamily: 'LapsusBold',\n              fontSize: 20,\n              padding: '10px 20px',\n              '@media (min-width: 768px)': {\n                fontSize: 40,\n              },\n              '@media (min-width: 1024px)': {\n                fontSize: 50,\n              },\n              color: 'black',\n              backgroundColor: '#db9b13',\n              border: '7px solid white',\n              borderRadius: '60px',\n              maxWidth: '1000px',\n              lineHeight: '1',\n              letterSpacing: '10px',\n              transform: 'rotate(-5deg)',\n              marginTop: '150px',\n              marginTop: '50px',\n              '&:hover': {\n                backgroundColor: 'rgba(216,152,16, 0.7)',\n              },\n            }}\n          >\n            MINT NOW!\n          </Button>\n        </Box>\n        <Box\n          sx={{\n            overflow: 'hidden',\n            padding: '0 15px',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        >\n          <Carousel\n            responsive={BREAKPOINTS}\n            infinite\n            autoPlay\n            autoPlaySpeed={1000}\n            transitionDuration={1000}\n          >\n            <Box\n              sx={{\n                width: '100%',\n                height: '100%',\n                textAlign: 'center',\n              }}\n            >\n              <img\n                src={nft}\n                style={{\n                  width: '300px',\n                }}\n              />\n            </Box>\n            {/* <Box\n              sx={{\n                width: '300px',\n                height: '400px',\n              }}\n            >\n              <img\n                src={nft}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                }}\n              />\n            </Box> */}\n          </Carousel>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default MintBox;\n","import mintStatusImage from 'assets/images/mint_status.png';\r\nimport ConnectWalletButton from 'components/ConnectWalletButton';\r\nimport Timer from 'components/Timer';\r\nimport config from 'config';\r\nimport useFetch from 'hooks/useFetch';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { sugarHeadService } from 'services/blockchain/sugarHeadService';\r\nimport { useAppSelector } from 'store';\r\nimport { store } from 'store';\r\nimport { setCurrentTokenId } from 'store/actions/globalActions';\r\n\r\nimport { Box, Button, Typography } from '@mui/material';\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nimport MintBox from '../MintBox';\r\n\r\nfunction MintStatus({ sx }) {\r\n  const { active, account } = useWeb3React();\r\n  const { price, currentTokenId } = useAppSelector((state) => state.global);\r\n  const { data, loading, error } = useFetch(`${config.apiBaseURL}time`);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(data, loading, error);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(price, currentTokenId);\r\n  }, [price, currentTokenId]);\r\n  return (\r\n    <Box sx={{ width: '100%', ...sx }}>\r\n      {!active && (\r\n        <Box\r\n          sx={{\r\n            backgroundImage: `url(${mintStatusImage})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            paddingBottom: '150px',\r\n            backgroundPosition: 'center top',\r\n            marginBottom: '15px',\r\n            padding: '0 15px',\r\n            paddingBottom: '30px',\r\n            '@media (min-width: 769px)': {\r\n              flexDirection: 'row',\r\n              paddingBottom: '80px',\r\n            },\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ConnectWalletButton />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              maxWidth: '1200px',\r\n              margin: '100px auto auto auto',\r\n              justifyContent: 'space-between',\r\n              position: 'relative',\r\n              flexDirection: 'column',\r\n              '@media (min-width: 769px)': {\r\n                flexDirection: 'row',\r\n              },\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                position: 'relative',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                margin: 'auto',\r\n                '@media (min-width: 769px)': {\r\n                  justifyContent: 'initial',\r\n                  alignItems: 'initial',\r\n                  margin: 'initial',\r\n                },\r\n              }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: 'LapsusBold',\r\n                  color: '#d89810',\r\n                  fontSize: 40,\r\n                  marginRight: '50px',\r\n                  '@media (min-width: 768px)': {\r\n                    WebkitTextStroke: '3px black',\r\n                    fontSize: 70,\r\n                  },\r\n                  '@media (min-width: 769px)': {\r\n                    marginRight: 'initial',\r\n                    paddingTop: '90px',\r\n                    transform: 'rotate(-30deg)',\r\n                  },\r\n                  '@media (min-width: 1024px)': {\r\n                    fontSize: 90,\r\n                  },\r\n                  WebkitTextStroke: '2px black',\r\n                }}\r\n              >\r\n                {currentTokenId}\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: 'LapsusBold',\r\n                  color: '#d89810',\r\n                  fontSize: 30,\r\n                  position: 'relative',\r\n                  transform: 'initial',\r\n                  left: 'initial',\r\n                  '@media (min-width: 768px)': {\r\n                    WebkitTextStroke: '3px black',\r\n                    fontSize: 50,\r\n                  },\r\n                  '@media (min-width: 769px)': {\r\n                    position: 'absolute',\r\n                    left: '100px',\r\n                    transform: 'rotate(-10deg)',\r\n                  },\r\n                  '@media (min-width: 1024px)': {\r\n                    fontSize: 70,\r\n                  },\r\n                  WebkitTextStroke: '2px black',\r\n                }}\r\n              >\r\n                Gone\r\n              </Typography>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                position: 'relative',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                margin: 'auto',\r\n                alignItems: 'center',\r\n                '@media (min-width: 769px)': {\r\n                  paddingTop: '100px',\r\n                  display: 'initial',\r\n                  margin: 'initial',\r\n                },\r\n              }}\r\n            >\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: 'LapsusBold',\r\n                  color: 'black',\r\n                  fontSize: 40,\r\n                  position: 'relative',\r\n                  marginRight: '30px',\r\n                  '@media (min-width: 768px)': {\r\n                    WebkitTextStroke: '3px #d89810',\r\n                    fontSize: 70,\r\n                  },\r\n                  '@media (min-width: 769px)': {\r\n                    top: -20,\r\n                    right: '40px',\r\n                    position: 'absolute',\r\n                    marginRight: 'initial',\r\n                  },\r\n                  '@media (min-width: 1024px)': {\r\n                    fontSize: 90,\r\n                  },\r\n                  WebkitTextStroke: '2px #d89810',\r\n                }}\r\n              >\r\n                {config.totalSupply - currentTokenId}\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: 'LapsusBold',\r\n                  color: 'black',\r\n                  fontSize: 30,\r\n                  transform: 'initial',\r\n                  padding: 0,\r\n                  '@media (min-width: 768px)': {\r\n                    WebkitTextStroke: '3px #d89810',\r\n                    fontSize: 50,\r\n                  },\r\n                  '@media (min-width: 769px)': {\r\n                    transform: 'rotate(8deg)',\r\n                  },\r\n                  '@media (min-width: 1024px)': {\r\n                    fontSize: 70,\r\n                  },\r\n                  WebkitTextStroke: '2px #d89810',\r\n                }}\r\n              >\r\n                Remaining\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      {active && <MintBox />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MintStatus;\r\n","import carouselImage from 'assets/images/carousel.png';\r\nimport React from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nconst BREAKPOINTS = {\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 5,\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 768 },\r\n    items: 3,\r\n  },\r\n  smallTablet: {\r\n    breakpoint: { max: 768, min: 425 },\r\n    items: 2,\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 425, min: 0 },\r\n    items: 1,\r\n  },\r\n};\r\n\r\nfunction NFTCarousel({ sx }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        backgroundImage: `url(${carouselImage})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: '100% 100%',\r\n        overflow: 'hidden',\r\n        padding: '35px 0',\r\n        marginBottom: '15px',\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Box textAlign=\"center\">\r\n        <Carousel\r\n          responsive={BREAKPOINTS}\r\n          infinite\r\n          autoPlay\r\n          autoPlaySpeed={500}\r\n          transitionDuration={500}\r\n        >\r\n          {Array(10)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <Box>\r\n                <img\r\n                  style={{ height: 'auto', width: '90%', margin: '0 15px' }}\r\n                  key={`Carousel${i}`}\r\n                  src={require(`assets/images/nfts/${i + 1}.png`)}\r\n                  alt={i}\r\n                />\r\n              </Box>\r\n            ))}\r\n        </Carousel>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NFTCarousel;\r\n","import roadmapImage from 'assets/images/roadmap.png';\r\nimport React from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nfunction RoadMap({ sx }) {\r\n  return (\r\n    <Box\r\n      component=\"img\"\r\n      src={roadmapImage}\r\n      sx={{ width: '100%', maxWidth: '100%' }}\r\n    ></Box>\r\n  );\r\n}\r\n\r\nexport default RoadMap;\r\n","import secretSauceImage from 'assets/images/secret_sauce.png';\r\nimport React from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nfunction SecretSauce({ sx }) {\r\n  return (\r\n    <Box\r\n      component=\"img\"\r\n      src={secretSauceImage}\r\n      sx={{ width: '100%', maxWidth: '100%' }}\r\n    ></Box>\r\n  );\r\n}\r\n\r\nexport default SecretSauce;\r\n","import teamImage from 'assets/images/vault_team_noletter.png';\r\nimport config from 'config';\r\nimport React from 'react';\r\n\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nfunction TeamInfo({ sx }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        backgroundImage: `url(${teamImage})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center top',\r\n        ...sx,\r\n        margin: '0',\r\n        padding: '0 0 50px 0',\r\n        '@media (min-width: 425px)': {\r\n          padding: '0 0 50px 0',\r\n        },\r\n        '@media (min-width: 768px)': {\r\n          padding: '0 0 50px 0',\r\n        },\r\n        '@media (min-width: 1024px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        '@media (min-width: 1440px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        '@media (min-width: 1920px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          padding: '30px 0 40px 0',\r\n          '@media (min-width: 375px)': {\r\n            padding: '25px 0 30px 0',\r\n          },\r\n          '@media (min-width: 425px)': {\r\n            padding: '25px 0',\r\n          },\r\n          '@media (min-width: 768px)': {\r\n            padding: '14px 0',\r\n          },\r\n          '@media (min-width: 1024px)': {\r\n            padding: '25px 0',\r\n          },\r\n          '@media (min-width: 1440px)': {\r\n            padding: '15px 0',\r\n          },\r\n          '@media (min-width: 1920px)': {\r\n            padding: '30px 0',\r\n          },\r\n        }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'LapsusBold',\r\n            color: '#db9b13',\r\n            textDecoration: 'none',\r\n            fontSize: 30,\r\n            letterSpacing: 7,\r\n            textAlign: 'center',\r\n            '@media (min-width: 375px)': {\r\n              fontSize: 40,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 425px)': {\r\n              fontSize: 40,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 768px)': {\r\n              fontSize: 60,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 1024px)': {\r\n              fontSize: 70,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 1440px)': {\r\n              fontSize: 90,\r\n              letterSpacing: 15,\r\n            },\r\n            '@media (min-width: 1920px)': {\r\n              fontSize: 110,\r\n              letterSpacing: 20,\r\n            },\r\n          }}\r\n        >\r\n          THE TEAM\r\n        </Typography>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'grid',\r\n          justifyItems: 'center',\r\n          gridTemplateColumns: 'repeat(2, 1fr)',\r\n          rowGap: '10px',\r\n          '@media (min-width: 768px)': {\r\n            rowGap: '30px',\r\n            gridTemplateColumns: 'repeat(3, 1fr)',\r\n          },\r\n        }}\r\n      >\r\n        {Array(6)\r\n          .fill()\r\n          .map((_, i) => (\r\n            <Box\r\n              component=\"img\"\r\n              sx={{\r\n                height: 'auto',\r\n                width: '130px',\r\n                '@media (min-width: 768px)': {\r\n                  width: '200px',\r\n                },\r\n                '@media (min-width: 1024px)': {\r\n                  width: '250px',\r\n                },\r\n              }}\r\n              src={require(`assets/images/nfts/${i + 1}.png`)}\r\n              alt={i}\r\n            />\r\n          ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TeamInfo;\r\n","import AssetLockAbi from 'abi/AssetLock.json';\r\nimport config from 'config';\r\n\r\nimport BlockchainService from './blockchainService';\r\n\r\nclass AssetService extends BlockchainService {\r\n  constructor(assetAddress) {\r\n    super();\r\n    this.contractAddress = assetAddress;\r\n    this.contract = new this.web3.eth.Contract(AssetLockAbi, assetAddress);\r\n  }\r\n\r\n  claimAsset = async (from, tokenIds) => {\r\n    try {\r\n      const dataAbi = this.contract.methods.claim(tokenIds).encodeABI();\r\n      const txHash = await this.signTransaction(from, dataAbi, 0);\r\n      return txHash;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\nconst assetService = new AssetService(config.assetLockAddress);\r\n\r\nexport default AssetService;\r\nexport { assetService };\r\n","import { useBoolean } from 'ahooks';\r\nimport claimBtn from 'assets/images/claim_btn.png';\r\nimport valutConnectBtnImage from 'assets/images/vault_connect_btn.png';\r\nimport vaultImage from 'assets/images/vault_team_noletter.png';\r\nimport Timer from 'components/Timer';\r\nimport config from 'config';\r\nimport useFetch from 'hooks/useFetch';\r\nimport { useEffect } from 'react';\r\nimport { assetService } from 'services/blockchain/assetService';\r\nimport { store } from 'store';\r\nimport { useAppSelector } from 'store';\r\nimport { setTokenIds } from 'store/actions/globalActions';\r\n\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Box, Button, Link, Typography } from '@mui/material';\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nfunction Vault({ sx }) {\r\n  const { active, account } = useWeb3React();\r\n  const { tokenIds, claimable } = useAppSelector((state) => state.global);\r\n  const [isClaiming, setIsClaiming] = useBoolean(false);\r\n  const { data, loading, error } = useFetch(`${config.apiBaseURL}asset`);\r\n  const time = useFetch(`${config.apiBaseURL}time`);\r\n  console.log('tiem', time, config);\r\n\r\n  useEffect(() => {\r\n    if (active) store.dispatch(setTokenIds(account));\r\n  }, [active, account]);\r\n\r\n  const onClaim = async () => {\r\n    setIsClaiming.setTrue();\r\n    const tx = await assetService.claimAsset(account, tokenIds);\r\n    if (tx !== null) toast.success('Successfully claimed!');\r\n    setIsClaiming.setFalse();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundImage: `url(${vaultImage})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center top',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '0 0 50px 0',\r\n        '@media (min-width: 425px)': {\r\n          padding: '0 0 50px 0',\r\n        },\r\n        '@media (min-width: 768px)': {\r\n          padding: '0 0 50px 0',\r\n        },\r\n        '@media (min-width: 1024px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        '@media (min-width: 1440px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        '@media (min-width: 1920px)': {\r\n          padding: '0 0 100px 0',\r\n        },\r\n        marginBottom: '15px',\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          padding: '30px 0 40px 0',\r\n          '@media (min-width: 375px)': {\r\n            padding: '25px 0 30px 0',\r\n          },\r\n          '@media (min-width: 425px)': {\r\n            padding: '25px 0',\r\n          },\r\n          '@media (min-width: 768px)': {\r\n            padding: '30px 0',\r\n          },\r\n          '@media (min-width: 1024px)': {\r\n            padding: '40px 0',\r\n          },\r\n          '@media (min-width: 1440px)': {\r\n            padding: '15px 0',\r\n          },\r\n          '@media (min-width: 1920px)': {\r\n            padding: '30px 0',\r\n          },\r\n        }}\r\n      >\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'LapsusBold',\r\n            color: '#db9b13',\r\n            textDecoration: 'none',\r\n            fontSize: 30,\r\n            letterSpacing: 7,\r\n            '@media (min-width: 375px)': {\r\n              fontSize: 40,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 425px)': {\r\n              fontSize: 40,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 768px)': {\r\n              fontSize: 60,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 1024px)': {\r\n              fontSize: 70,\r\n              letterSpacing: 10,\r\n            },\r\n            '@media (min-width: 1440px)': {\r\n              fontSize: 90,\r\n              letterSpacing: 15,\r\n            },\r\n            '@media (min-width: 1920px)': {\r\n              fontSize: 110,\r\n              letterSpacing: 20,\r\n            },\r\n          }}\r\n        >\r\n          THE VAULT\r\n        </Typography>\r\n      </Box>\r\n      {time.data && (\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            right: '20px',\r\n            top: '69px',\r\n            '@media (min-width: 768px)': {\r\n              right: '20px',\r\n              top: '96px',\r\n            },\r\n            '@media (min-width: 1024px)': {\r\n              right: '20px',\r\n              top: '112px',\r\n            },\r\n            '@media (min-width: 1440px)': {\r\n              transform: 'rotate(-10deg)',\r\n              right: '20px',\r\n              top: '50px',\r\n            },\r\n          }}\r\n        >\r\n          <Timer targetTime={time.data.lockTime} />\r\n        </Box>\r\n      )}\r\n      {/* {!active && (\r\n        <Button\r\n          sx={{\r\n            left: '40px',\r\n            top: '30px',\r\n            width: '340px',\r\n            position: 'absolute',\r\n          }}\r\n        >\r\n          <img src={valutConnectBtnImage} style={{ width: '100%' }} />\r\n        </Button>\r\n      )} */}\r\n      {!active && (\r\n        <Box\r\n          sx={{\r\n            display: 'grid',\r\n            rowGap: 2,\r\n            columnGap: 4,\r\n            '@media (min-width: 1025px)': {\r\n              gridTemplateColumns: 'repeat(2, 1fr)',\r\n            },\r\n          }}\r\n        >\r\n          {config['assets'] &&\r\n            config['assets'].map((asset) => (\r\n              <Link\r\n                href={config['coinGeckoBaseUrl'] + asset['url']}\r\n                sx={{\r\n                  fontFamily: 'LapsusBold',\r\n                  display: 'block',\r\n                  color: 'black',\r\n                  textDecoration: 'none',\r\n                  fontSize: 25,\r\n                  '@media (min-width: 768px)': {\r\n                    WebkitTextStroke: '2px #d89810',\r\n                    fontSize: 40,\r\n                  },\r\n                  '@media (min-width: 1024px)': {\r\n                    fontSize: 50,\r\n                  },\r\n                  WebkitTextStroke: '1px #d89810',\r\n                }}\r\n              >\r\n                {`${asset['name']} (${asset['symbol']})`}\r\n              </Link>\r\n            ))}\r\n        </Box>\r\n      )}\r\n      {active && (\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontFamily: 'LapsusBold',\r\n              fontSize: 25,\r\n              '@media (min-width: 768px)': {\r\n                fontSize: 40,\r\n              },\r\n              '@media (min-width: 1024px)': {\r\n                fontSize: 50,\r\n              },\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            {`${tokenIds.length} NFTs YOU HOLD`}\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              fontFamily: 'LapsusBold',\r\n              fontSize: 25,\r\n              '@media (min-width: 768px)': {\r\n                fontSize: 40,\r\n              },\r\n              '@media (min-width: 1024px)': {\r\n                fontSize: 50,\r\n              },\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            {/* YOUR VAULT ASSETS $ (USD):{data['usd']} */}\r\n          </Typography>\r\n          <Button\r\n            sx={{\r\n              marginTop: '70px',\r\n              width: '70%',\r\n              fontFamily: 'LapsusBold',\r\n              fontSize: '20px',\r\n              padding: '15px 10px',\r\n              '@media (min-width: 768px)': {\r\n                fontSize: 40,\r\n              },\r\n              '@media (min-width: 1024px)': {\r\n                fontSize: 50,\r\n              },\r\n              color: '#fac718',\r\n              backgroundColor: 'black',\r\n              border: '10px solid white',\r\n              borderRadius: '60px',\r\n              maxWidth: '900px',\r\n              lineHeight: '1',\r\n              letterSpacing: '7px',\r\n              transform: 'rotate(-5deg)',\r\n              opacity: claimable ? 1 : 0.5,\r\n              '&:disabled': {\r\n                color: '#fac718',\r\n              },\r\n              '&:hover': {\r\n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n              },\r\n            }}\r\n            onClick={onClaim}\r\n            disabled={!claimable}\r\n          >\r\n            CLAIM YOUR ASSETS NOW\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      {/* {tokenIds}\r\n      <LoadingButton\r\n        disabled={!(active && claimable && tokenIds.length > 0)}\r\n        onClick={onClaim}\r\n        loading={isClaiming}\r\n      >\r\n        Claim\r\n      </LoadingButton> */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Vault;\r\n","import { useBoolean } from 'ahooks';\r\nimport MainContainer from 'components/MainContainer';\r\nimport MintStatus from 'pages/MintPage/MintStatus';\r\nimport NFTCarousel from 'pages/MintPage/NFTCarousel';\r\nimport RoadMap from 'pages/MintPage/RoadMap';\r\nimport SecretSauce from 'pages/MintPage/SecretSauce';\r\nimport TeamInfo from 'pages/MintPage/TeamInfo';\r\nimport Vault from 'pages/MintPage/Vault';\r\nimport { useEffect } from 'react';\r\nimport React from 'react';\r\nimport { store } from 'store';\r\nimport {\r\n  setCurrentPhase,\r\n  setCurrentTokenId,\r\n  setPrice,\r\n} from 'store/actions/globalActions';\r\nimport { sleep } from 'utils/utils';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nfunction MintPage() {\r\n  useEffect(() => {\r\n    store.dispatch(setCurrentPhase());\r\n    store.dispatch(setPrice());\r\n    store.dispatch(setCurrentTokenId());\r\n  }, []);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <MintStatus />\r\n        <NFTCarousel />\r\n        <Box\r\n          sx={{\r\n            marginBottom: '15px',\r\n            '@media (min-width: 769px)': {\r\n              display: 'grid',\r\n              columnGap: '35px',\r\n              gridTemplateColumns: 'repeat(2, 1fr)',\r\n            },\r\n          }}\r\n        >\r\n          <SecretSauce />\r\n          <RoadMap />\r\n        </Box>\r\n        <Vault />\r\n        <TeamInfo />\r\n      </Box>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nexport default MintPage;\r\n","var map = {\n\t\"./1.png\": 8512,\n\t\"./10.png\": 3549,\n\t\"./2.png\": 1556,\n\t\"./3.png\": 3848,\n\t\"./4.png\": 3513,\n\t\"./5.png\": 9662,\n\t\"./6.png\": 1027,\n\t\"./7.png\": 2896,\n\t\"./8.png\": 801,\n\t\"./9.png\": 7510,\n\t\"./Untitled195_20230203101454.png\": 186,\n\t\"./Untitled270_20230110165459.png\": 374,\n\t\"./Untitled309_20230114131624.png\": 7320,\n\t\"./Untitled313_20230114153351.png\": 2809,\n\t\"./Untitled345_20230117201939.png\": 1958\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2969;"],"names":["children","useState","sx","backgroundImage","mobileBackgroundURL","backgroundPosition","backgroundSize","backgroundRepeat","paddingTop","tabletBackgroundURL","backgroundURL","Container","disableGutters","display","padding","maxWidth","lg","width","sidebarURL","justifyContent","connectorsByName","Injected","InjectedConnector","supportedchainIds","config","connectorName","activate","useWeb3React","convertToHex","value","toString","join","chainId","window","ethereum","request","method","params","connectWallet","useConnectWallet","switchChain","useSwitchChain","account","handleConnect","useEffect","Button","onClick","marginTop","fontFamily","fontSize","letterSpacing","border","color","backgroundColor","borderRadius","lineHeight","transform","useCountdown","targetDate","countDownDate","Date","getTime","countDown","setCountDown","interval","setInterval","clearInterval","getReturnValues","Math","floor","BlockchainService","getNonce","address","web3","eth","getTransactionCount","getEthBalance","getBalance","signTransaction","dataABI","_etherAmount","transactionParameters","to","contractAddress","from","data","parseInt","txHash","checkTx","alert","console","log","result","getTransactionReceipt","status","selectedProvider","random","blockchainProvider","this","Web3","SugarHeadService","sugarHeadAddr","chadinuAddr","dvdaAddr","getTokenIdsOf","contract","methods","call","getCurrentTokenId","getPrice","getCurrentPhase","currentPhase","checkAmount","amount","toast","checkEthBalance","ethAmount","ethBalance","Number","checkIsEarlyMinter","isEarlyMinter","dvdaContract","balanceOf","buyNFTWithChadinu","chadinuContract","dataAbi","encodeABI","buyNFTForFree","freeMinters","buyNFTEarly","price","isFundSufficient","buyNFTsInPublic","Contract","SugarHeadAbi","ERC721Abi","sugarHeadService","setCurrentPhase","dispatch","type","actionTypes","setPrice","setCurrentTokenId","currentTokenId","setTokenIds","tokenIds","setClaimable","targetTime","days","hours","minutes","seconds","isExpired","setIsExpired","store","variant","component","url","setdata","loading","setloading","error","seterror","axios","then","response","catch","BREAKPOINTS","desktop","breakpoint","max","min","items","tablet","smallTablet","mobile","useStyles","makeStyles","customOutline","borderColor","mintNumber","setMintNumber","chadinu","setChadinu","active","useAppSelector","state","global","classes","onMint","tx","mintBox","position","marginBottom","textAlign","pt","WebkitTextStroke","gridTemplateColumns","order","flexDirection","alignItems","pb","mb","FormControl","margin","InputLabel","id","Select","className","labelId","label","onChange","e","target","defaultValue","MenuItem","FormLabel","RadioGroup","FormControlLabel","control","Radio","overflow","responsive","infinite","autoPlay","autoPlaySpeed","transitionDuration","height","src","nft","style","useFetch","mintStatusImage","paddingBottom","marginRight","left","top","right","carouselImage","Array","fill","map","_","i","require","alt","roadmapImage","secretSauceImage","teamImage","textDecoration","justifyItems","rowGap","AssetService","assetAddress","claimAsset","claim","AssetLockAbi","assetService","claimable","useBoolean","setIsClaiming","time","onClaim","setTrue","success","setFalse","vaultImage","lockTime","columnGap","asset","Link","href","length","opacity","disabled","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}